/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package eu.transkribus.native_interfaces;

public class ILayoutAnalysis {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ILayoutAnalysis(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ILayoutAnalysis obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        transkribus_interfacesJNI.delete_ILayoutAnalysis(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ILayoutAnalysis() {
    this(transkribus_interfacesJNI.new_ILayoutAnalysis(), true);
  }

  public boolean processLayout(Image image, String xmlFileIn, String xmlFileOut) {
    return transkribus_interfacesJNI.ILayoutAnalysis_processLayout(swigCPtr, this, Image.getCPtr(image), image, xmlFileIn, xmlFileOut);
  }

  public boolean process(Image image, String xmlFileIn, String xmlFileOut, StringVector ids, StringVector props) {
    return transkribus_interfacesJNI.ILayoutAnalysis_process(swigCPtr, this, Image.getCPtr(image), image, xmlFileIn, xmlFileOut, StringVector.getCPtr(ids), ids, StringVector.getCPtr(props), props);
  }

}
